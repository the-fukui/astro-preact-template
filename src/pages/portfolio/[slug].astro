---
import { Picture } from '@astrojs/image/components'
import Layout from '@layouts/Layout.astro'
import { getPortfolio, getPortfolioList } from '@libs/microcms'

import { GetStaticPaths } from 'astro'

export const getStaticPaths: GetStaticPaths = async () => {
  const portfolios = await getPortfolioList
  return portfolios.map((portfolio) => ({
    params: {
      slug: portfolio.id,
    },
  }))
}

const portfolioID = String(Astro.params.slug)
const portfolio = await getPortfolio(portfolioID)
---

<Layout title="Welcome to Astro.">
  <main>
    <div class="wrapper">
      <section class="section catch">
        <h2
          class:list={[
            {
              'catch__title--long':
                portfolio.title && portfolio.title.length > 10,
            },
            'catch__title',
          ]}
        >
          {
            portfolio.id === 'fukuinofu' ? (
              <img
                src="/img/logo_dark.svg"
                class="catch__title-logo"
                alt="ふくいのふ"
              />
            ) : (
              <>{portfolio.title}</>
            )
          }
        </h2>
        <div class="catch__container">
          <a
            href={portfolio.url}
            rel="noopener"
            target="_blank"
            class="catch__img-url"
          >
            {
              portfolio.thumbnail && (
                <Picture
                  src={portfolio.thumbnail.url}
                  widths={[860, 860 * 2]}
                  sizes={'860px'}
                  aspectRatio="1:1"
                  alt=""
                  class="catch__img"
                />
              )
            }
          </a>
          <div class="catch__type">Website</div>
        </div>
        <div class="catch__url">
          <a
            href={portfolio.url}
            rel="noopener"
            target="_blank"
            class="catch__link"
            >{portfolio.url}
          </a>
        </div>
      </section>
      <section class="body">
        <div class="description">
          <div
            class="description__content section"
            set:html={portfolio.content}
          >
          </div>
        </div>
        <div class="detail section">
          <div
            class="detail__container tech"
            data-watch-is-scrolled={JSON.stringify({ rootMargin: '-100px' })}
          >
            <div class="detail__heading">
              <h2 class="detail__heading-tag">TECH</h2>
              <small class="detail__sub-heading-tag">使用技術</small>
            </div>
            <ul class="tech__list">
              {
                portfolio.tech &&
                portfolio.tech.map((tech) => (
                  <li class="tech__item">
                    <a
                      href={tech.url}
                      rel="noopener"
                      target="_blank"
                      class="tech__link"
                    >
                      {tech.icon && (
                        <Picture
                          src={tech.icon.url}
                          widths={[100, 200]}
                          sizes={'100px'}
                          aspectRatio={tech.icon.width / tech.icon.height}
                          alt={tech.name}
                          class="tech__icon"
                        />
                      )}

                      <div
                        class:list={[
                          'tech__name',
                          { 'tech__name--tablet': true },
                        ]}
                      >
                        {tech.name}
                      </div>
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
          <div
            class="part detail__container"
            data-watch-is-scrolled={JSON.stringify({ rootMargin: '-100px' })}
          >
            <div class="detail__heading">
              <h2 class="detail__heading-tag">PART</h2>
              <small class="detail__sub-heading-tag">制作箇所</small>
            </div>
            <ul class="part__list">
              {
                portfolio.part &&
                portfolio.part.map((part) => (
                  <li class="part__item">
                    {part.icon && (
                      <Picture
                        src={part.icon.url}
                        widths={[32, 64]}
                        sizes={'32px'}
                        aspectRatio="1:1"
                        alt={part.name}
                        class="part__icon"
                      />
                    )}
                    <span class="part__name">{part.name}</span>
                  </li>
                ))
              }
            </ul>
          </div>
        </div>
      </section>

      <!-- <aside>
        <div class="navigation section">
          <nuxt-link
            v-if="prevPost"
            :to="`/portfolio/${prevPost.id}/`"
            class="navigation__link"
          >
            <button-navigation direction="prev">{{
              prevPost.title
            }}</button-navigation>
          </nuxt-link>
          <span v-else></span>
          <nuxt-link
            v-if="nextPost"
            :to="`/portfolio/${nextPost.id}/`"
            class="navigation__link"
          >
            <button-navigation direction="next">{{
              nextPost.title
            }}</button-navigation>
          </nuxt-link>
          <span v-else></span>
        </div>
      </aside> -->
    </div>
  </main>
</Layout>
<!-- <script>
// import ButtonNavigation from '~/components/atoms/ButtonNavigation'
export default {
  async asyncData({ $axios, route }) {
    let result = {}
    await import('~/modules/api')
      .then((module) => {
        const cms = new module.MicroCMS()
        const promise = []
        promise[0] = cms.get({
          endpoint: 'portfolio',
          ID: route.params.slug,
        })
        promise[1] = cms.get({
          endpoint: 'portfolio',
          fields: 'id,title',
        })
        return Promise.all(promise).then(([portfolio, allPosts]) => {
          // 前後関係がブログポストとは逆になっている

          // シンプルなIDだけのの配列へ
          const allPostsID = allPosts.map((post) => post.id)
          // 前後の記事の割り出し
          const currentIndex = allPostsID.findIndex((id) => {
            return id === route.params.slug
          })
          let nextPost = false
          let prevPost = false
          if (allPostsID[currentIndex + 1] !== 'undefined') {
            // 前の記事がある時＝ポートフォリオでは次
            nextPost = allPosts[currentIndex + 1]
          }
          if (allPostsID[currentIndex - 1] !== 'undefined') {
            // 次の記事がある時＝ポートフォリオでは前
            prevPost = allPosts[currentIndex - 1]
          }
          result = {
            portfolio,
            prevPost,
            nextPost,
          }
        })
        // result.blog = []
      })
      .catch((e) => {
        throw e
      })
    return result
  },
  // components: {
  //   // ButtonNavigation
  // },
  head() {
    return {
      title: '制作事例：' + this.portfolio.title,
      meta: [
        {
          hid: 'description',
          name: 'description',
          content: this.portfolio.content,
        },
        {
          hid: 'og:type',
          property: 'og:type',
          content: 'article',
        },
        {
          hid: 'og:title',
          property: 'og:title',
          content: '制作事例：' + this.portfolio.title + ' | ふくいのふ',
        },
        {
          hid: 'og:description',
          property: 'og:description',
          content: this.portfolio.content,
        },
        {
          hid: 'og:image',
          property: 'og:image',
          content:
            this.portfolio.thumbnail.url +
            '?fit=crop&w=1200&h=630&fm=jpeg&auto=compress',
        },
        {
          hid: 'thumbnail',
          name: 'thumbnail',
          content:
            this.portfolio.thumbnail.url +
            '?fit=crop&w=800&h=800&fm=jpeg&auto=compress',
        },
      ],
    }
  },

  mounted() {
    this.IntersectObserve(this.$refs.tech, {
      rootMargin: '-100px',
    })
    this.IntersectObserve(this.$refs.part, {
      rootMargin: '-100px',
    })
  },
}
</script> -->
<style lang="scss" scoped>
  @use 'sass:color';

  .catch {
    position: relative;

    &::after {
      position: absolute;
      bottom: -1px;
      left: 15px;
      z-index: 0;
      width: 30%;
      height: 400px;
      content: '';
      background: $red;

      @include mq-down(md) {
        height: 200px;
      }
    }

    &__title {
      position: relative;
      z-index: 10;
      display: inline-block;
      padding: 10px 30px;
      font-size: 8rem;
      word-break: keep-all;
      background: white;
      @include lhCrop(1.7);
      @include lhCropUnder(1.7);

      &--long {
        font-size: 4rem;
      }

      @include mq-down(md) {
        padding: 10px 15px;
        font-size: get_vw(40);

        &--long {
          font-size: get_vw(16);
        }
      }

      // &:after {
      //   @extend .catch__title::before;
      //   margin-bottom: calc((1 - 1.7) * 0.5em);
      // }
    }

    &__title-logo {
      width: auto;
      height: 6rem;
      vertical-align: baseline;

      @include mq-down(md) {
        height: get_vw(30);
      }
    }

    &__container {
      position: relative;
      z-index: 5;
      display: flex;
      padding-left: 30px;
      margin-top: -25px;

      @include mq-down(md) {
        padding-left: 15px;
      }

      @include mq-down(sm) {
        margin-top: get_vw(-18);
      }
    }

    &__img {
      position: relative;
      width: 100%;

      &::before {
        display: block;
        padding-top: 100%;
        content: '';
      }

      :global(img) {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }
    }

    &__img-url {
      display: block;
      width: 860px;
    }

    &__type {
      position: relative;
      width: 7.1rem;
      padding-top: 15px;
      padding-left: 20px;
      font-size: 4rem;
      background: color.adjust($black, lightness: -10%);
      writing-mode: vertical-rl;
      @include ff-gill-inline;

      &::after {
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        height: 6rem;
        content: '';
        background: color.adjust($yellow, lightness: 3%);

        @include mq-down(md) {
          height: get_vw(40);
        }
      }

      @include mq-down(sm) {
        width: get_vw(35);
        padding-left: 0;
        font-size: get_vw(20);
      }
    }

    &__url {
      position: relative;
      z-index: 5;
      padding-right: 3.2rem;
      font-size: 3rem;
      text-align: right;
      @include ff-gill-nova;

      @include mq-down(md) {
        padding-right: 1.6rem;
        font-size: get_vw(20);
      }
    }

    &__link {
      position: relative;

      &::after {
        position: absolute;
        bottom: -3px;
        left: 0;
        width: 0;
        height: 3px;
        content: '';
        background: $black;
        transition: width 0.2s;
      }

      &:hover::after {
        width: 100%;
      }
    }
  }

  .description {
    margin-top: 60px;
    color: white;
    background: $black;

    @include mq-down(sm) {
      margin-top: 30px;
    }

    &__content {
      position: relative;
      z-index: auto;
      padding-top: 30px;
      padding-bottom: 30px;
      font-weight: normal;

      &::after {
        position: absolute;
        top: -60px;
        left: 15px;
        z-index: -1;
        width: 30%;
        height: calc(60px + 100% + 30px);
        content: '';
        background: $red;

        @include mq-down(sm) {
          top: -30px;
          height: calc(30px + 100% + 30px);
        }
      }

      &::first-letter {
        font-size: 4rem;
      }
    }
  }

  .detail {
    position: relative;
    margin-top: 90px;

    &::after {
      position: absolute;
      right: 0;
      bottom: -15px;
      z-index: 0;
      width: 200px;
      height: 200px;
      content: '';
      background: $green;
    }

    &__container {
      position: relative;
      z-index: 5;
      display: flex;
      align-items: flex-start;
      padding-top: 60px;
      background: $white;

      &:last-child {
        padding-bottom: 60px;
      }

      @include mq-down(sm) {
        display: block;
      }
    }

    &__heading {
      margin-left: 15px;
    }

    &__heading-tag {
      position: relative;
      display: block;
      font-size: 4rem;

      &::after {
        position: absolute;
        bottom: 3px;
        left: calc(-15px - 15px);
        width: 0;
        height: 5px;
        content: '';
        background: $black;
        transition: width 0.4s ease-out;
      }

      @include mq-down(sm) {
        display: inline-block;
      }
    }

    &__sub-heading-tag {
      display: block;
      padding-top: 2px;
      padding-right: 3px;
      text-align: right;

      @include mq-down(sm) {
        display: table-cell;
        font-size: get_vw(16);
      }
    }
  }

  .tech {
    &.intersected {
      .detail__heading-tag::after {
        width: calc(100% + 15px + 15px - 3px);
      }

      .tech__icon {
        transform: scale(1);
      }
    }

    &__list {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      width: 100%;
      padding: 25px 30px 0;
      margin: 0 -15px;

      @include mq-down(sm) {
        justify-content: center;
      }
    }

    &__item {
      position: relative;
      height: 50px;
      margin: 0 15px 30px;

      @include mq-down(sm) {
        margin: get_vw(30) get_vw(15);
      }

      &:hover {
        .tech__name {
          opacity: 1;
        }
      }
    }

    &__link {
      display: block;
      display: flex;
      align-items: flex-end;
      width: 100%;
      height: 100%;
    }

    &__icon {
      transition: transform 0.2s;
      transform: scale(0);

      :global(img) {
        max-width: 100px;
        max-height: 50px;
        object-fit: contain;
      }
    }

    &__name {
      position: absolute;
      bottom: -2em;
      left: 50%;
      white-space: nowrap;
      opacity: 0;
      transition: opacity 0.2s;
      transform: translateX(-50%);

      &--tablet {
        font-size: 1.2rem;
        color: color.adjust($black, lightness: 10%);
        opacity: 1;
      }

      @include mq-down(sm) {
        font-size: get_vw(12);
        color: color.adjust($black, lightness: 10%);
        opacity: 1;
      }
    }
  }

  .part {
    margin-top: -1px;

    &.intersected {
      .detail__heading-tag::after {
        width: calc(100% + 15px + 15px - 3px);
      }

      .part__item::after {
        width: 100%;
      }
    }

    &__list {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      width: 100%;
      padding: 25px 0 0 30px;
      margin: -5px;
    }

    &__item {
      position: relative;
      display: flex;
      align-items: center;
      padding: 15px;
      margin: 5px;

      &::after {
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        width: 0%;
        height: 100%;
        content: '';
        background: #e5e5e5;
        transition: width 0.4s ease-out;
        transform: skewX(-15deg);
      }

      @include mq-down(sm) {
        padding: 15px 7.5px;
      }
    }

    &__icon {
      width: 32px;
      height: 32px;
      margin-right: 10px;

      :global(img) {
        width: 100%;
        height: 100%;
        vertical-align: top;
      }

      @include mq-down(sm) {
        width: get_vw(20);
        height: get_vw(20);
        margin-right: 8px;
        margin-left: 2px;
      }
    }
  }

  .navigation {
    display: flex;
    justify-content: space-between;
    margin-top: 60px;

    @include mq-down(sm) {
      display: block;
      padding-bottom: 1px;
    }

    &__link {
      width: calc(50% - 7.5px);

      @include mq-down(sm) {
        width: 100%;
      }
    }
  }
</style>
