---
import { Picture } from '@astrojs/image/components'

export interface Props extends astroHTML.JSX.HTMLAttributes {
  text?: string
  avatar?: {
    url: string
  }
}
const { class: className, text, avatar } = Astro.props as Props

const LINKS = [
  {
    name: 'twitter',
    href: 'https://twitter.com/var_fukui',
    icon: '/img/twitter.svg',
    width: 512,
    height: 512,
  },
  {
    name: 'qiita',
    href: 'https://qiita.com/the_fukui',
    icon: '/img/qiita_text.svg',
    width: 500,
    height: 208,
  },
  {
    name: 'github',
    href: 'https://github.com/the-fukui',
    icon: '/img/github.svg',
    width: 24,
    height: 24,
  },
  {
    name: 'npm',
    href: 'https://www.npmjs.com/~the-fukui',
    icon: '/img/npm.svg',
    width: 780,
    height: 250,
  },
]
---

<section id="profile" class={`profile section ${className}`}>
  <div class="profile__container">
    <div class="profile__content">
      <h2
        class="profile__title"
        data-watch-is-scrolled={JSON.stringify({ rootMargin: '-100px' })}
      >
        PROFILE
      </h2>
      <div class="profile__text" set:html={text}></div>
      <ul class="links">
        {
          LINKS.map((item) => (
            <li class="links__item">
              <a
                href={item.href}
                target="_blank"
                rel="noopener"
                class="links__link"
              >
                <img
                  src={item.icon}
                  class={`links__${item.name}`}
                  alt={item.name}
                  width={item.width}
                  height={item.height}
                />
              </a>
            </li>
          ))
        }
      </ul>
    </div>
    <div class="profile__avatar">
      {
        avatar && (
          <Picture
            src={avatar.url + (import.meta.env.DEV ? '?w=500&fm=webp' : '')}
            widths={[250]}
            sizes="250px"
            aspectRatio="1:1"
            alt=""
            class="portfolio__thumbnail"
          />
        )
      }
      <div class="profile__bg2"></div>
      <div class="profile__bg2--back"></div>
    </div>
  </div>
</section>

<style lang="scss" scoped>
  .profile {
    position: relative;

    &::before {
      position: absolute;
      bottom: -60px;
      left: 50%;
      z-index: -2;
      width: 150vw;
      height: 50%;
      content: '';
      background: #0a5c74;
      transform: translateX(-50%) rotate(-9deg);
      transform-origin: center bottom;

      @include mq-down(max) {
        bottom: 10px;
      }

      @include mq-down(sm) {
        bottom: get_vw(20);
      }
    }

    &::after {
      @extend .profile, :before;

      bottom: -100px;
      z-index: -3;
      background: #094f64;
      transform: translateX(-50%) rotate(-4deg);

      @include mq-down(max) {
        bottom: -50px;
      }

      @include mq-down(sm) {
        bottom: get_vw(-30);
      }
    }

    &__container {
      position: relative;
      display: flex;
      align-items: center;
      width: 100%;
      color: white;

      @include mq-down(max) {
        flex-direction: column;
        align-items: flex-end;
      }
    }

    &__title {
      position: relative;
      display: inline-block;
      padding: 0 5px;
      font-size: 8rem;
      color: $black;
      color: rgb(51 51 51 / 0%);
      transition: color 0.2s ease-in-out 0.3s;
      transform: perspective(450px) rotateY(45deg);
      transform-origin: bottom left;
      transform-origin: center center;
      @include ff-gill-nova;

      @include mq-down(lg) {
        margin-top: get_vw(-10);
      }

      @include mq-down(sm) {
        margin-top: get_vw(-10);
        font-size: get_vw(60);
      }

      &.intersected {
        color: rgb(51 51 51 / 100%);

        &::after {
          top: 5px;
          height: 7.5rem;

          @include mq-down(sm) {
            height: get_vw(58);
          }
        }
      }

      &::after {
        position: absolute;
        top: 50%;
        left: 0;
        z-index: -1;
        width: 100%;
        height: 0;
        content: '';
        background: white;
        transition: height 0.3s ease-in-out, top 0.3s ease-in-out;
        transform: translateY(50%);
        backface-visibility: hidden;
      }

      // color: white;
    }

    &__content {
      position: relative;
      z-index: 5;
      width: 100%;

      // @include mq-down(max) {
      //   width: 100%;
      // }

      &::after {
        position: absolute;
        top: 8rem;
        left: 50%;
        z-index: -1;
        width: 150vw;
        height: 70%;
        content: none;
        background: $black;
        border-top: 7px solid white;
        transform: translateX(-50%) translateZ(-100px) rotateZ(6.5deg);
        transform-origin: center center;

        @include mq-down(max) {
          content: '';
        }

        @include mq-down(sm) {
          top: get_vw(50);
          height: 80%;
        }
      }
    }

    &__text {
      position: relative;
      padding-top: 30px;
      margin-bottom: 30px;

      @include mq-down(max) {
        margin-bottom: 0;
      }
    }

    &__avatar {
      position: relative;
      z-index: 0;
      display: inline-block;
      margin-top: 180px;

      @include mq-down(max) {
        margin-top: -20px;
      }

      :global(img) {
        position: relative;
        z-index: 4;
        width: 250px;
        height: 250px;
        margin: 7px;
        border-radius: 50%;

        @include mq-down(sm) {
          width: 200px;
          height: 200px;
        }
      }

      &::after {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 2;
        width: 100%;
        height: 100%;
        content: '';
        background: #203669;
        border: 7px solid white;
        border-radius: 50%;
      }
    }

    &__bg2 {
      position: absolute;
      top: 50%;
      right: calc(250px * 0.3);
      z-index: 3;
      width: 0;
      height: calc((500px + 35vw) * 0.6);
      border-top: calc(((500px + 35vw) * 0.6 - 130px) / 2) solid transparent;
      border-bottom: calc(((500px + 35vw) * 0.6 - 130px) / 2) solid transparent;
      border-left: calc((100vw - #{$pc-width}) / 2 + #{$pc-width} - 250px * 0.3)
        solid $black;
      transform: translateY(-50%) translateZ(0);

      @include mq-down(max) {
        top: 30px;
        right: -15px;
        bottom: auto;
        height: calc((600px + 35vw) * 0.4);
        border-top-width: calc(((500px + 35vw) * 0.4 - 130px) / 2);
        border-bottom-width: calc(((500px + 35vw) * 0.4 - 130px) / 2);
        border-left-width: 100vw;
      }

      @include mq-down(sm) {
        top: 0;
      }

      &--back {
        @extend .profile__bg2;

        z-index: 1;
        height: calc((500px + 35vw) * 0.6 + 14px);
        border-left-color: white;

        @include mq-down(max) {
          height: calc((600px + 35vw) * 0.4 + 14px);
        }
      }
    }
  }

  .links {
    display: inline-flex;
    margin: -15px;

    @include mq-down(max) {
      margin-top: 15px;
    }

    &__item {
      position: relative;
      display: flex;
      align-items: center;
      margin: 15px;

      &::after {
        position: absolute;
        bottom: -10px;
        left: 50%;
        width: 0;
        height: 3px;
        content: '';
        background: white;
        transition: width 0.2s, left 0.2s;
      }

      &:hover::after {
        left: 0;
        width: 100%;
      }
    }

    &__links {
      display: block;
    }

    &__twitter {
      width: 26px;
      height: auto;
    }

    &__qiita {
      width: auto;
      height: 20px;
    }

    &__github {
      width: auto;
      height: 25px;
    }

    &__npm {
      width: auto;
      height: 19px;
    }
  }
</style>
