---
import ButtonHamburger from './ButtonHamburger.astro'
import TheNavigation from './TheNavigation.astro'

export interface Props extends astroHTML.JSX.HTMLAttributes {}
const { class: className } = Astro.props as Props
---

<details class={`mobile-navigation ${className}`}>
  <summary
    ><ButtonHamburger class="button-hamburger" isOpen={false} />
    <ButtonHamburger class="button-hamburger--isOpen" isOpen={true} />
  </summary>
  <div class:list={['navigation-wrapper']}>
    <TheNavigation class="the-navigation" />
  </div>
</details>

<style lang="scss">
  .mobile-navigation {
    summary {
      position: relative;
      z-index: 1;
      display: block;

      &::-webkit-details-marker {
        display: none;
      }
    }

    &[open] summary {
      .button-hamburger {
        display: none;
      }

      .button-hamburger--isOpen {
        display: block;
      }
    }

    &[open] .navigation-wrapper {
      transform: translateX(0);
    }
  }

  .navigation-wrapper {
    position: fixed;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    width: 100%;
    padding: 10px 5px;
    overflow: hidden;
    background: white;
    transition: transform 0.2s ease-out;
    transform: translateY(-100%);

    @include mq-down(sm) {
      align-items: center;
      height: 100%;
      padding: 0;
      transition: transform 0.4s cubic-bezier(0.17, 0.92, 0.14, 0.96);
      transform: translateX(-100%);

      // &:after {
      //   content: '';
      //   width: get_vw(10);
      //   height: get_vw(200);
      //   transform: rotateZ(-45deg);
      //   transform-origin: bottom right;
      //   position: absolute;
      //   bottom: 0;
      //   left: get_vw(150);
      //   background: $red;
      // }

      // &:before {
      //   content: '';
      //   width: get_vw(10);
      //   height: get_vw(600);
      //   transform: rotateZ(45deg);
      //   transform-origin: bottom left;
      //   position: absolute;
      //   bottom: 0;
      //   left: get_vw(50);
      //   background: $green;
      // }

      &--open {
        transform: translateX(0);
      }
    }
  }

  .button-hamburger {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 999;

    &--isOpen {
      display: none;
    }

    &--sticky {
      position: fixed;
      top: auto;
      right: auto;
      bottom: calc(10% + #{get_vw(44)});
      left: calc(#{get_vw(-44)} + #{get_vw(-24)});
      transition: left 0.4s cubic-bezier(0.17, 0.92, 0.14, 0.96);
    }

    &--show {
      // @keyframes showHamburger {
      //   0% {
      //     transform: translateX(-100%);
      //   }

      //   100% {
      //     transform: translateX(0%);
      //   }
      // }

      left: 0;

      // animation: showHamburger 0.4s cubic-bezier(0.17, 0.92, 0.14, 0.96) 0s both;
    }
  }
</style>
