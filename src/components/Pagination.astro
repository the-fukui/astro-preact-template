---
export interface Props extends astroHTML.JSX.HTMLAttributes {
  totalCount: number
  current: number
  rootPath: string
}

const { rootPath = '/', current = 1, totalCount = 0 } = Astro.props as Props

const middle = (() => {
  switch (true) {
    case current === 1 || current === 2:
    default:
      return [2, 3]
    case current >= 3 && current + 1 < totalCount:
      return [current - 1, current, current + 1]
    case current === totalCount - 1:
      return [current - 1, current]
    case current === totalCount && totalCount === 3:
      return [current - 1]
    case current === totalCount:
      return [current - 2, current - 1]
  }
})()
---

<ul class="pagination">
  <li class:list={['page', { active: current === 1 }]}>
    <a href={rootPath} class="page__link">1</a>
  </li>
  {
    2 === totalCount && (
      <li
        v-if="2 === totalCount"
        class:list={['page', { active: current === 2 }]}
      >
        <a href={`${rootPath}2/`} class="page__link">
          2
        </a>
      </li>
    )
  }
  {1 < current - 2 && <li class="page gap">…</li>}

  {
    2 < totalCount &&
      middle.map((num) => (
        <li class:list={['page', 'middle', { active: current === num }]}>
          <a href={`${rootPath}${num}/`} class="page__link">
            {num}
          </a>
        </li>
      ))
  }

  {current + 2 < totalCount && <li class="page gap">…</li>}
  {
    3 === totalCount && 2 !== current && 1 !== current && (
      <li class:list={['page', { active: current === 3 }]}>
        <a href={`${rootPath}3/`} class="page__link">
          3
        </a>
      </li>
    )
  }
  {
    3 < totalCount && (
      <li class:list={['page', { active: current === totalCount }]}>
        <a href={`${rootPath}${totalCount}/`} class="page__link">
          {totalCount}
        </a>
      </li>
    )
  }
</ul>

<style lang="scss">
  .pagination {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .page {
    display: inline-block;
    margin-bottom: 12px;
    margin-left: 10px;

    &__link {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 48px;
      height: 48px;
      margin-left: 0;
      font-size: 18px;
      line-height: 1;
      color: white;
      background: $green;
      transition: background 0.2s;

      &:hover {
        background-color: color.adjust($green, $lightness: -10%);
      }
    }

    &.active {
      .page__link {
        background-color: color.adjust($green, $lightness: -10%);
      }
    }
  }

  .gap {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 48px;
    min-height: 48px;
    padding-top: 1em;
    margin-left: 0;
    font-size: 13px;
    color: $green;

    & + .page {
      margin-left: 0;
    }
  }
</style>
